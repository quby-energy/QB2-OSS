#@TYPE: Machine
#@Name: ProDrive Quby2
#@DESCRIPTION: Machine configuration for Quby2

#
# Hardware-based properties
#
TARGET_ARCH = "arm"
TARGET_FPU = "soft"
TARGET_OS  = "linux-gnueabi"

FEED_ARCH = "qb2"
PACKAGE_ARCH = "qb2"
BASE_PACKAGE_ARCH = "qb2"

# when (${MACHINE} != ${PACKAGE_ARCH}), add it to PACKAGE_ARCHS:
PACKAGE_ARCHS += "${PACKAGE_ARCH}"

ROOT_FLASH_SIZE = "128"
VOLATILE_STORAGE_SIZE = "64"
MACHINE_GUI_CLASS = "smallscreen"
MACHINE_DISPLAY_WIDTH_PIXELS = "800"
MACHINE_DISPLAY_HEIGHT_PIXELS = "480"

#OLD: MACHINE_FEATURES = "kernel26 apm touchscreen screen alsa usbgadget usbhost serial sound rgb32 ethernet ipv4 ipv6"
MACHINE_FEATURES = "kernel26 apm touchscreen screen sound alsa usbgadget usbhost serial i2c spi ethernet ipv4 ipv6 wifi"
MACHINE_FEATURES += " uboot " 
# NOTE: keep MACHINE_FEATURES + DISTRO_FEATURES in sync!

#
# Software/packages selection
#
PREFERRED_PROVIDER_virtual/kernel		= "linux-quby2"
#PREFERRED_PROVIDER_virtual/kernel		= "linux"
#PREFERRED_VERSION_virtual/kernel		= "2.6.36"

# next is now handles by sane-toolchain.inc:
#
#PREFERRED_PROVIDER_virtual/libc			= "glibc"
#PREFERRED_PROVIDER_libc					= "glibc"
#PREFERRED_PROVIDER_glibc				= "glibc"
#PREFERRED_PROVIDER_virtual/libiconv		= "glibc"
#PREFERRED_PROVIDER_virtual/libintl		= "glibc"
#
#
##NOTE: multiple providers are available for virtual/arm-linux-gnueabi-libc-for-gcc (glibc, external-toolchain-csl, external-toolchain-generic, eglibc, external-toolchain);
##PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}libc-for-gcc	= "glibc-intermediate" OLD-ONE
#PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}libc-for-gcc	= "glibc"
#
##NOTE: multiple providers are available for virtual/arm-linux-gnueabi-libc-initial (glibc-initial, external-toolchain-csl, eglibc-initial, external-toolchain-generic);
#PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}libc-initial	= "glibc-initial"
#
##NOTE: multiple providers are available for virtual/arm-linux-gnueabi-binutils
#PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}binutils		= "binutils-cross"
#
##This is unrelated to the kernel version, but userspace apps (e.g. HAL) require a recent version to build against
#PREFERRED_VERSION_linux-libc-headers					= "2.6.36"
##PREFERRED_PROVIDER_linux-libc-headers					= "linux-quby2"
##NOTE: multiple providers are available for linux-libc-headers (linux-libc-headers, external-toolchain-csl, external-toolchain-generic, external-toolchain);
#PREFERRED_PROVIDER_linux-libc-headers					= "linux-libc-headers"
#

#############################################################################
# stuff from distro we put here for flexibility
#############################################################################
# Base line versions, good for most things (from sane-toolchain.inc)
PREFERRED_GCC_VERSION					= "4.5"
#PREFERRED_GCC_VERSION					= "4.4.2"
PREFERRED_BINUTILS_VERSION				= "2.21"
#PREFERRED_BINUTILS_VERSION				= "2.19.51"
PREFERRED_EGLIBC_VERSION				= "2.12"
PREFERRED_GLIBC_VERSION					= "2.10.1"
PREFERRED_VERSION_linux-libc-headers	= "2.6.34"
LIBC = "glibc"
require conf/distro/include/sane-toolchain.inc


## <from tune-arm926ejs.inc>
TARGET_CC_ARCH = "-march=armv5te -mtune=arm926ej-s"
TARGET_LDFLAGS = ""

ARM_INSTRUCTION_SET = "arm"
require conf/distro/include/arm-thumb.inc

#MY_VERSION_GLIBC = "2.10.1"
#PREFERRED_VERSION_glibc 			?= "${MY_VERSION_GLIBC}"
#PREFERRED_VERSION_glibc-initial 	?= "${MY_VERSION_GLIBC}"
#
#MY_BINUTILS_VERSION = "2.19.51"
#PREFERRED_VERSION_binutils               ?= "${MY_BINUTILS_VERSION}"
#REFERRED_VERSION_binutils-cross         ?= "${MY_BINUTILS_VERSION}"
#PPREFERRED_VERSION_binutils-cross-sdk     ?= "${MY_BINUTILS_VERSION}"
#
#MY_GCC_VERSION = "4.4.2"
#PREFERRED_VERSION_gcc                    ?= "${MY_GCC_VERSION}"
#PREFERRED_VERSION_gcc-cross              ?= "${MY_GCC_VERSION}"
#PREFERRED_VERSION_gcc-cross-sdk          ?= "${MY_GCC_VERSION}"
#PREFERRED_VERSION_gcc-cross-initial      ?= "${MY_GCC_VERSION}"
#PREFERRED_VERSION_gcc-cross-intermediate ?= "${MY_GCC_VERSION}"

#############################################################################

# until we have flash-for-directfb-1.4
PREFERRED_VERSION_directfb 				= "1.2.8"

#XSERVER = "xserver-kdrive-fbdev"
#PREFERRED_PROVIDER_virtual/xserver		= "xserver-kdrive-fbdev"
#PREFERRED_PROVIDER_virtual/libx11		= "diet-x11"
#PREFERRED_PROVIDER_virtual/libsdl   	= "libsdl-directfb"

#############################################################################

SRCREV_pn-opkg = "635"
SRCREV_pn-opkg-native = "633"

#############################################################################

# used by sysvinit_2
SERIAL_CONSOLE = "115200 ttymxc0"
#USE_VT = "1"



# From dmesg:
# UBI: smallest flash I/O unit:    2048
# UBI: logical eraseblock size:    129024 bytes
# UBIFS: file system size:   123088896 bytes (120204 KiB, 117 MiB, 954 LEBs)
MKUBIFS_ARGS = "-m 2048 -e 129024 -c 954"

# from dmesg:
# UBI: smallest flash I/O unit:    2048
# UBI: physical eraseblock size:   131072 bytes (128 KiB)
# UBI: sub-page size:              512
UBINIZE_ARGS = "-m 2048 -p 128KiB -s 512"
UBI_VOLNAME = "rootfs"

