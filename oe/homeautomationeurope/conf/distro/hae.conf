#@--------------------------------------------------------------------
#@TYPE: Distribution
#@NAME: HAE
#@DESCRIPTION: HAE
#@MAINTAINER: HAE
#@--------------------------------------------------------------------

DISTRO_NAME = "HAE"
DISTRO_VERSION = "${DATE}"
DISTRO_REVISION = "2"
DISTRO_TYPE = "release"

# Branding
TARGET_VENDOR = "-hae"

#TARGET_OS ?= "linux"
#TARGET_OS = "linux-uclibc"


# We want images supporting the following features (for task-base)
#ALL: DISTRO_FEATURES = "largefile ipv4 ipv6 nfs smbfs wifi ppp alsa bluetooth ext2 vfat irda pcmcia usbgadget usbhost pci pam" 
DISTRO_FEATURES = " eabi ipv4 ipv6 wifi alsa ext2 vfat usbgadget usbhost"
DISTRO_FEATURES += " uboot redboot "
# NOTE: keep MACHINE_FEATURES + DISTRO_FEATURES in sync!


MACHINE_TASK_PROVIDER = "dropbear"

# Generate locales on the buildsystem instead of on the target. Speeds up first boot, set to "1" to enable
ENABLE_BINARY_LOCALE_GENERATION ?= "1"
GLIBC_GENERATE_LOCALES = "en_US.UTF-8 en_GB.UTF-8 nl_NL.UTF-8 de_DE.UTF-8 fr_FR.UTF-8 es_ES.UTF-8 it_IT.UTF-8" 
LOCALE_UTF8_ONLY = "1"
USE_NLS = "yes"


#make devshell available as task
INHERIT += "devshell"

#############################################################################
# packaging syste: ipkg / opkg
#############################################################################

# If we're using an .ipk based rootfs, we want to have opkg installed so postinst script can run
PREFERRED_PKG_FORMAT = "ipk"
IPKG_VARIANT = "opkg"
INHERIT += "package_ipk"
# Build ipk's wrapped with tar.gz instead of ar, like OpenWRT has them
IPKGBUILDCMD = "ipkg-build -c -o 0 -g 0"
#possible options: none, add, full
ONLINE_PACKAGE_MANAGEMENT = "full"
#PREFERRED_PROVIDER_virtual/update-alternatives ?= "opkg"
PREFERRED_PROVIDER_virtual/update-alternatives-native ?= "opkg-native"
PREFERRED_PROVIDER_virtual/update-alternatives ?= ${PREFERRED_PROVIDER_opkg}

# in bitbake.conf: PACKAGES = "${PN}-dbg ${PN} ${PN}-doc ${PN}-dev ${PN}-locale"
# we don't want -dbg -doc -dev -locale packages!
# need -dev for some packages to install in staging dir!
#PACKAGES = "${PN} ${PN}-dev"

# for sysvinit-inittab, amongst others:
MACHINE_ARCH	:= "${PACKAGE_ARCH}"


#############################################################################


# grr, ${SRCREV} woes....
SRCREV_pn-opkg ?= "HEAD"
SRCREV_pn-opkg-nogpg ?= "HEAD"
SRCREV_pn-opkg-native ?= "HEAD"
#SRCREV_pn-opkg ?= "4346"
#SRCREV_pn-opkg-native ?= "4346"
#
SRCREV_pn-calibrateproto ?= "1da6fd1e2c7a49648245c98481fabea8b9690a8c"
SRCREV_pn-calibrateproto ?= "HEAD"
SRCREV_pn-libxcalibrate ?= "HEAD"

PREFERRED_PROVIDER_virtual/db = "db"
PREFERRED_PROVIDER_virtual/db-native = "db-native"
PREFERRED_PROVIDER_virtual/libqte2 = "qte-mt"

PREFERRED_PROVIDER_xdmcp = "libxdmcp"
PREFERRED_PROVIDER_xfont = "libxfont"



# This is what lives in SDK
#ASSUME_PROVIDED += "virtual/${TARGET_PREFIX}gcc virtual/libc"

# Rename packages to names used in OpenWRT
#PKG_ncurses = "libncurses"




# fix for libgpg-error $CC
#export CC_FOR_BUILD = "gcc"


#TERMCMD = "screen -r 'OE/${PACKAGE_ARCH}/d'"

#SCREEN_TERMCMD = 'screen -m -t "OE/${PACKAGE_ARCH}/d"'
#SCREEN_TERMCMDRUN = '${SCREEN_TERMCMD} $SHELLCMDS'

BASH_TERMCMD = 'bash --login'
BASH_TERMCMDRUN = '${BASH_TERMCMD} -c $SHELLCMDS'

TERMCMD = "${SCREEN_TERMCMD}"
TERMCMDRUN = "${SCREEN_TERMCMDRUN}"
